# The policy needs to be added to the ACM HUB and then it will be pushed on all clusters
# except the HUB (see placementrule on the bottom)
{{ if .Values.clusterGroup.isHubCluster }}
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: configdemo-region-secret-policy
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    argocd.argoproj.io/sync-options: SkipPrune
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: config-demo-secret
          annotations:
            apps.open-cluster-management.io/deployables: "secret"
        spec:
          remediationAction: enforce
          severity: medium
          namespaceSelector:
            include:
              - default
          object-templates:
            - complianceType: musthave
              objectDefinition:
                kind: Secret
                type: Opaque
                metadata:
                  name: config-demo-secret
                  namespace: config-demo
                apiVersion: v1
                data:
                  secret: '{{ `{{hub fromSecret "config-demo" "config-demo-secret" "secret" hub}}` }}'
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: configdemo-region-secret-placement-binding
placementRef:
  name: configdemo-region-secret-placement
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: configdemo-region-secret-policy
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
# We need to run this on any managed cluster but not on the HUB
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: configdemo-region-secret-placement
spec:
  clusterConditions:
    - status: 'True'
      type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - key: local-cluster
        operator: NotIn
        values:
          - 'true'
{{ end }}
